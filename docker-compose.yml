
version: '3.4'

services:
  backend:
    container_name: ftracker-back
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
    env_file:
    - .env
    command: npm run start:dev
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: ftracker-postgres
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    container_name: ftracker-redis
    image: redis:7-alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - cache:/var/lib/redis/data
    
  adminer:
    container_name: ftracker-adminer
    image: adminer:4.8.1
    restart: always
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}

volumes:
  pgdata:
  cache:
