# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TransactionCategoryDto {
  id: ID!
  name: String!
  color: String!
  svgPath: String!
  active: Boolean!
  userId: String!
}

type UserDto {
  id: ID!
  displayName: String!
  email: String!
  password: String!
  settingsId: String!
}

type SessionDto {
  id: ID!
  refreshToken: String!
  userId: ID!
}

type CurrencyDto {
  id: ID!
  type: CurrencyType!
  name: String!
  color: String!
  rate: Float!
  createdAt: String!
  updatedAt: String!
}

enum CurrencyType {
  BYN
  USD
  EUR
}

type WalletDto {
  id: ID!
  name: String!
  userId: ID!
  currencyId: ID!
  currency: CurrencyDto!
}

type TransactionDto {
  id: String!
  amount: Float!
  description: String!
  date: String!
  createdAt: String!
  updatedAt: String!
  categoryId: String!
  userId: String!
  walletId: String!
  wallet: WalletDto!
  category: TransactionCategoryDto!
}

type WalletStatsDto {
  wallet: WalletDto!
  totalAmount: Float!
}

type UserBudgetReportDataDto {
  date: String!
  totalAmount: Float!
}

type UserBudgetReportDto {
  data: [UserBudgetReportDataDto!]!
}

type WalletActivityReportDataDto {
  date: String!
  count: Float!
}

type WalletActivityReportDto {
  data: [WalletActivityReportDataDto!]!
}

type Query {
  currentUser: UserDto!
  defaultTransactionCategories: [TransactionCategoryDto!]!
  transactionCategories(request: TransactionQueryCategoryDto!): [TransactionCategoryDto!]!
  wallets(request: WalletQueryRequestDto!): [WalletDto!]!
  currency: [CurrencyDto!]!
  transactions(request: TransactionQueryRequestDto): [TransactionDto!]!
  walletStats(request: WalletStatsQueryRequestDto!): WalletStatsDto!
  walletActivityReport(request: WalletActivityReportQueryRequestDto!): WalletActivityReportDto!
  userBudgetReport(request: TransactionQueryRequestDto!): UserBudgetReportDto!
}

input TransactionQueryCategoryDto {
  pagination: PaginationDto
  active: Boolean
  searchByName: String
}

input PaginationDto {
  page: Float!
  limit: Float!
}

input WalletQueryRequestDto {
  userId: ID
  walletId: ID
  searchByName: String
}

input TransactionQueryRequestDto {
  pagination: PaginationDto
  userId: String
  walletId: ID
  currencyId: ID
  date: String
  fromDate: String
  toDate: String
  dateOrder: String
}

input WalletStatsQueryRequestDto {
  walletId: ID!
  fromDate: String
  toDate: String
}

input WalletActivityReportQueryRequestDto {
  walletId: ID!
  fromDate: String
  toDate: String
}

type Mutation {
  signUp(request: SignUpRequestDto!): UserDto!
  signIn(request: SignInRequestDto!): SessionDto!
  logout: SessionDto!
  refresh: SessionDto!
  updateTransactionCategory(request: TransactionCategoryUpdateDto!): TransactionCategoryDto!
  createTransactionCategory(request: TransactionCategoryCreateRequestDto!): TransactionCategoryDto!
  deleteTransactionCategory(request: TransactionCategoryDeleteRequestDto!): TransactionCategoryDto!
  createWallet(request: WalletCreateRequestDto!): WalletDto!
  deleteWallet(request: WalletDeleteRequestDto!): WalletDto!
  updateWallet(request: WalletUpdateRequestDto!): WalletDto!
  createTransaction(request: TransactionCreateRequestDto!): TransactionDto!
  deleteTransaction(request: TransactionDeleteRequestDto!): TransactionDto!
}

input SignUpRequestDto {
  displayName: String!
  email: String!
  password: String!
}

input SignInRequestDto {
  email: String!
  password: String!
}

input TransactionCategoryUpdateDto {
  categoryId: ID!
  active: Boolean
}

input TransactionCategoryCreateRequestDto {
  name: String!
  svgPath: String!
  color: String!
}

input TransactionCategoryDeleteRequestDto {
  categoryId: ID!
}

input WalletCreateRequestDto {
  name: String!
  currencyId: ID!
}

input WalletDeleteRequestDto {
  walletId: ID!
}

input WalletUpdateRequestDto {
  walletId: ID!
  name: String
  currencyId: ID!
}

input TransactionCreateRequestDto {
  amount: Float!
  description: String!
  date: DateTime!
  categoryId: ID!
  walletId: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input TransactionDeleteRequestDto {
  transactionId: ID!
}